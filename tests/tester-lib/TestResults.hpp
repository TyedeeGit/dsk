/**
 * Copyright (C) 2024-2025 Gianmarco Lenzi
 *
 * @file TestResults.hpp
 * @author Gianmarco Lenzi
 * @brief Header for test results class.
 */

#pragma once
#include "common.hpp"

namespace TesterLib {
    /**
    * @brief Class for storing test results.
    */
    class TestResults {
        private:
            /**
             * @brief Whether the test passed or not.
             */
            bool passed = true;

            /**
             * @brief The warnings generated by the test.
             */
            TestWarnings warnings;
        public:
            /**
             * @brief Constructor.
             */
            TestResults() = default;

            /**
             * @brief Constructor.
             * @param passed Whether the test passed or not.
             * @param warnings The warnings generated by the test.
             */
            TestResults(const bool passed, TestWarnings warnings) : passed(passed), warnings(std::move(warnings)) {}

            /**
             * @brief Gets whether the test passed or not.
             * @return Whether the test passed or not.
             */
            bool get_passed() const { return passed; }

            /**
             * @brief Fails the test.
             */
            void fail() { passed = false; }

            /**
             * @brief Gets the warnings generated by the test.
             * @return The warnings generated by the test.
             */
            const TestWarnings &get_warnings() const { return warnings; }

            /**
             * @brief Adds a warning message to the test results.
             * @param warning The warning message to add.
             */
            void add_warning(const std::string &warning) { warnings.insert(warning); }

            /**
             * @brief Gets the number of warnings generated by the test.
             * @return The number of warnings generated by the test.
             */
            std::size_t get_warnings_count() const { return warnings.size(); }
    };

} // TesterLib
